{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOtIv9IcE4V93MOGhgI52NL",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/maryamshadan/Basic-python-projects/blob/main/Pet%20Adoption%20System\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sGWo3Q4tiPk_",
        "outputId": "f03b8dee-a97c-4bde-8c6b-e97ccfefda2b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "--- Pet Adoption Menu ---\n",
            "1. View Pets\n",
            "2. Add Pet\n",
            "3. Adopt Pet\n",
            "4. Exit\n",
            "Enter your choice: 1\n",
            "No pets available.\n",
            "\n",
            "--- Pet Adoption Menu ---\n",
            "1. View Pets\n",
            "2. Add Pet\n",
            "3. Adopt Pet\n",
            "4. Exit\n",
            "Enter your choice: 2\n",
            "Enter species (Dog/Cat): dog\n",
            "Enter pet name: brownie\n",
            "Enter pet age: 1\n",
            "Enter breed: doberman\n",
            "Enter color: brown\n",
            "Dog added with ID: 8172\n",
            "\n",
            "--- Pet Adoption Menu ---\n",
            "1. View Pets\n",
            "2. Add Pet\n",
            "3. Adopt Pet\n",
            "4. Exit\n",
            "Enter your choice: 3\n",
            "Enter the Pet ID to adopt: 11133\n",
            "Invalid Pet ID.\n",
            "\n",
            "--- Pet Adoption Menu ---\n",
            "1. View Pets\n",
            "2. Add Pet\n",
            "3. Adopt Pet\n",
            "4. Exit\n",
            "Enter your choice: 1\n",
            "\n",
            "Pet ID: 8172\n",
            "Name: brownie, Species: Dog, Age: 1\n",
            "Breed: doberman, Color: brown\n",
            "Preferences: ('Bones', 'Walk')\n",
            "\n",
            "--- Pet Adoption Menu ---\n",
            "1. View Pets\n",
            "2. Add Pet\n",
            "3. Adopt Pet\n",
            "4. Exit\n",
            "Enter your choice: 3\n",
            "Enter the Pet ID to adopt: 8172\n",
            "You have adopted the following pet:\n",
            "Name: brownie, Species: Dog, Age: 1\n",
            "Breed: doberman, Color: brown\n",
            "Preferences: ('Bones', 'Walk')\n",
            "\n",
            "--- Pet Adoption Menu ---\n",
            "1. View Pets\n",
            "2. Add Pet\n",
            "3. Adopt Pet\n",
            "4. Exit\n",
            "Enter your choice: 4\n",
            "Exiting Pet Adoption System. Goodbye!\n"
          ]
        }
      ],
      "source": [
        "import random\n",
        "\n",
        "# Parent class\n",
        "class Pet:\n",
        "    def __init__(self, name, species, age):\n",
        "        self.name = name\n",
        "        self.species = species\n",
        "        self.age = age\n",
        "\n",
        "    def display_info(self):\n",
        "        print(f\"Name: {self.name}, Species: {self.species}, Age: {self.age}\")\n",
        "\n",
        "# Child class for Dogs\n",
        "class Dog(Pet):\n",
        "    def __init__(self, name, age, breed, color):\n",
        "        super().__init__(name, \"Dog\", age)\n",
        "        self.breed = breed\n",
        "        self.color = color\n",
        "        self.preferences = (\"Bones\", \"Walk\")\n",
        "\n",
        "    def display_info(self):\n",
        "        super().display_info()\n",
        "        print(f\"Breed: {self.breed}, Color: {self.color}\")\n",
        "        print(f\"Preferences: {self.preferences}\")\n",
        "\n",
        "# Child class for Cats\n",
        "class Cat(Pet):\n",
        "    def __init__(self, name, age, breed, color):\n",
        "        super().__init__(name, \"Cat\", age)\n",
        "        self.breed = breed\n",
        "        self.color = color\n",
        "        self.preferences = (\"Fish\", \"Nap\")\n",
        "\n",
        "    def display_info(self):\n",
        "        super().display_info()\n",
        "        print(f\"Breed: {self.breed}, Color: {self.color}\")\n",
        "        print(f\"Preferences: {self.preferences}\")\n",
        "\n",
        "# Dictionary to store pets\n",
        "pet_store = {}\n",
        "\n",
        "# Generate unique pet ID\n",
        "def generate_pet_id():\n",
        "    while True:\n",
        "        pet_id = random.randint(1000, 9999)\n",
        "        if pet_id not in pet_store:\n",
        "            return pet_id\n",
        "\n",
        "# Add a pet\n",
        "def add_pet():\n",
        "    species = input(\"Enter species (Dog/Cat): \").capitalize()\n",
        "    name = input(\"Enter pet name: \")\n",
        "    age = int(input(\"Enter pet age: \"))\n",
        "    breed = input(\"Enter breed: \")\n",
        "    color = input(\"Enter color: \")\n",
        "\n",
        "    if species == \"Dog\":\n",
        "        pet = Dog(name, age, breed, color)\n",
        "    elif species == \"Cat\":\n",
        "        pet = Cat(name, age, breed, color)\n",
        "    else:\n",
        "        print(\"\\nUnsupported species.\")\n",
        "        return\n",
        "\n",
        "    pet_id = generate_pet_id()\n",
        "    pet_store[pet_id] = pet\n",
        "    print(f\"{species} added with ID: {pet_id}\")\n",
        "\n",
        "# View all pets\n",
        "def view_pets():\n",
        "    if not pet_store:\n",
        "        print(\"\\n\\nNo pets available.\")\n",
        "        return\n",
        "    for pet_id, pet in pet_store.items():\n",
        "        print(f\"\\nPet ID: {pet_id}\")\n",
        "        pet.display_info()\n",
        "\n",
        "# Adopt a pet\n",
        "def adopt_pet():\n",
        "    pet_id = int(input(\"\\nEnter the Pet ID to adopt: \"))\n",
        "    if pet_id in pet_store:\n",
        "        print(\"\\nYou have adopted the following pet:\")\n",
        "        pet_store[pet_id].display_info()\n",
        "        del pet_store[pet_id]\n",
        "    else:\n",
        "        print(\"Invalid Pet ID.\")\n",
        "\n",
        "# Main menu\n",
        "def main():\n",
        "    while True:\n",
        "        print(\"\\n--- Pet Adoption Menu ---\")\n",
        "        print(\"1. View Pets\")\n",
        "        print(\"2. Add Pet\")\n",
        "        print(\"3. Adopt Pet\")\n",
        "        print(\"4. Exit\")\n",
        "        choice = input(\"Enter your choice: \")\n",
        "\n",
        "        if choice == '1':\n",
        "            view_pets()\n",
        "        elif choice == '2':\n",
        "            add_pet()\n",
        "        elif choice == '3':\n",
        "            adopt_pet()\n",
        "        elif choice == '4':\n",
        "            print(\"Exiting Pet Adoption System. Goodbye!\")\n",
        "            break\n",
        "        else:\n",
        "            print(\"Invalid choice. Try again.\")\n",
        "\n",
        "# Run the program\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ]
    }
  ]
}